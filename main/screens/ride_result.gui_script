local monarch = require "monarch.monarch"
local druid = require "druid.druid"
local route_service = require "main.model.route"
local ride_service = require "main.model.ride"
local cyclist_service = require "main.model.cyclist"

-- TODO: move to separate module 
local function process_ride(self)
    local result = ride_service.execute()
    gui.set_text(gui.get_node("text_result"), string.format("%s/100", result.fun))
    gui.set_text(gui.get_node("text_review"), result.review)

    local next = cyclist_service.next_cyclist()

    gui.set_enabled(self.button_next_node, true)
    self.druid:new_button("button_next/button", function()
        if next then
            monarch.post("bike", hash("reset_bike"))
            monarch.back()
        else
            gui.set_text(gui.get_node("text_result"), "")
            gui.set_text(gui.get_node("text_review"), "That was the last customer!\nThank you for playing :)")
        end
    end)
end

function init(self)
    gui.set_render_order(12)

    self.druid = druid.new(self)


    self.button_back_node = gui.get_node("button_back/button")
    self.button_next_node = gui.get_node("button_next/button")
    gui.set_enabled(self.button_next_node, false)
    gui.set_enabled(self.button_back_node, false)
    
    if route_service.selected > 0 then
        process_ride(self)
    else
        gui.set_text(gui.get_node("text_description"), "Select a Route")

        gui.set_enabled(self.button_back_node, true)
        self.druid:new_button("button_back/button", function()
            monarch.back()
        end)
    end
end

function final(self)
    self.druid:final()
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    monarch.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end
