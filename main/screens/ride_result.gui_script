local monarch = require "monarch.monarch"
local druid = require "druid.druid"
local route_service = require "main.model.route"
local ride_service = require "main.model.ride"
local cyclist_service = require "main.model.cyclist"

local function show_stars(self, result)
    local rating = tonumber(string.format("%.1f", (result.fun * 5) / 100))
    if rating < 0 then
        rating = 0
    end

    for i = 1, 5 do
        if i <= rating then
            gui.play_flipbook(gui.get_node("icon_star" .. i), hash("star"))
        elseif rating < i and rating > i - 1 then
            gui.play_flipbook(gui.get_node("icon_star" .. i), hash("star_half"))
        else
            gui.play_flipbook(gui.get_node("icon_star" .. i), hash("star_empty"))
        end
    end

    gui.set_text(gui.get_node("text_result"), string.format("%s/5", rating))
end

-- TODO: show all cyclist on final screen
local function process_ride(self)
    local result = ride_service.execute()
    
    gui.set_enabled(gui.get_node("icon_frame"), true)
    gui.play_flipbook(gui.get_node("icon_cyclist"), cyclist_service.get_cyclist().image)

    show_stars(self, result)
    gui.set_text(gui.get_node("text_review"), result.review)

    local next = cyclist_service.next_cyclist()

    gui.set_enabled(self.button_next_node, true)
    self.druid:new_button("button_next/button", function()
        msg.post(msg.url("bike", "/bike", "bike_controller"), hash("play_select"))
        if next then
            monarch.post("bike", hash("reset_bike"))
            monarch.back()
        else
            gui.set_enabled(gui.get_node("icon_frame"), false)
            gui.set_enabled(gui.get_node("panel_stars"), false)

            gui.set_text(gui.get_node("text_result"), "")
            gui.set_text(gui.get_node("text_review"), "That was the last rider!\nThank you for playing :)")
        end
    end)
end

function init(self)
    gui.set_render_order(12)

    self.druid = druid.new(self)


    self.button_back_node = gui.get_node("button_back/button")
    self.button_next_node = gui.get_node("button_next/button")
    gui.set_enabled(self.button_next_node, false)
    gui.set_enabled(self.button_back_node, false)
    
    if route_service.selected > 0 then
        process_ride(self)
    else
        gui.set_enabled(gui.get_node("icon_frame"), false)
        gui.set_enabled(gui.get_node("panel_stars"), false)

        gui.set_text(gui.get_node("text_result"), "")
        gui.set_text(gui.get_node("text_review"), "Select a Route")

        gui.set_enabled(self.button_back_node, true)
        self.druid:new_button("button_back/button", function()
            msg.post(msg.url("bike", "/bike", "bike_controller"), hash("play_select"))
            monarch.back()
        end)
    end

    msg.post(msg.url("bike", "/bike", "bike_controller"), hash("play_open"))
end

function final(self)
    self.druid:final()
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    monarch.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end
