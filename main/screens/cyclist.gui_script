local monarch = require "monarch.monarch"
local transitions = require "monarch.transitions.gui"
local cyclist_service = require "main.model.cyclist"
local druid = require "druid.druid"

function init(self)
    gui.set_render_order(12)
    
    self.druid = druid.new(self)

    local cyclist = cyclist_service.get_cyclist()

    gui.set_text(gui.get_node("text_name"), cyclist.name)

    local description = string.format("\"%s\"", cyclist.description)
    self.text_description = self.druid:new_text("text_description", description)

    gui.play_flipbook(gui.get_node("icon_cyclist"), cyclist.image)

    self.druid:new_button("button_back/button", function()
        monarch.post("bike", hash("show_routes"))
        msg.post(msg.url("bike", "/bike", "bike_controller"), hash("play_select"))
        monarch.back()
    end)

    local transition = transitions.create()
        .show_in(gui.get_node("W_Anchor"), transitions.slide_in_left, gui.EASING_LINEAR, 0.5, 0)
        .show_out(gui.get_node("W_Anchor"), transitions.slide_out_left, gui.EASING_LINEAR, 0.5, 0)
        .back_in(gui.get_node("W_Anchor"), transitions.slide_in_left, gui.EASING_LINEAR, 0.5, 0)
        .back_out(gui.get_node("W_Anchor"), transitions.slide_out_left, gui.EASING_LINEAR, 0.5, 0)
        .show_in(gui.get_node("root"), transitions.fade_in, gui.EASING_LINEAR, 0.3, 0)
        .show_out(gui.get_node("root"), transitions.fade_out, gui.EASING_LINEAR, 0.3, 0)
        .back_in(gui.get_node("root"), transitions.fade_in, gui.EASING_LINEAR, 0.3, 0)
        .back_out(gui.get_node("root"), transitions.fade_out, gui.EASING_LINEAR, 0.3, 0)

    monarch.on_transition("cyclist", transition)
    
    msg.post(msg.url("bike", "/bike", "bike_controller"), hash("play_open"))
end

function final(self)
    self.druid:final()
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
    monarch.on_message(message_id, message, sender)
end

function on_input(self, action_id, action)
    return self.druid:on_input(action_id, action)
end
